name: docker_build_push

on:
  workflow_run:
    workflows: ["Go-CI"]
    types:
      - completed 
env:
      docker_tag: v${{ github.run_number }}
  
jobs: 
  on-success:
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: checkout
      uses: actions/checkout@v2
      
    - name: Login to Docker Registry
      env: 
        docker_password: ${{ secrets.DOCKER_PASSWORD }}
        docker_username: ${{ secrets.DOCKER_USERNAME }} 
      run: echo  "$docker_password" | docker login kcdev1.krypc.com:5000 -u "$docker_username" --password-stdin

#Tag and push images
  tag_and_push:
    needs: on-success
    runs-on: self-hosted
    steps:
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7.7'

    - name: install python packages
      run: pip install python-dotenv
      
    - uses: docker/build-push-action@v1
    - name: Image tag and push
      run: |
        docker build -t go/hello -f Dockerfile . -t kcdev1.krypc.com:5000/gohello:$docker_tag
        docker images | grep kcdev1.krypc.com:5000/gohello
  
    - name: Version details
      if: ${{ success() }}
      run: |
        echo "Latest version is:" $docker_tag
        python pytest.py $docker_tag
    
    - name: Docker up
      if: ${{ success() }}
      run: docker-compose up -d
  on-failure:
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
    - name: failure message
      run: echo "Tests have failed."        
